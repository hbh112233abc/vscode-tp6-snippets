{
	"make controller class": {
		"prefix": "controller",
		"body": [
			"namespace app\\\\${1:module_name}\\controller;",
			"class ${TM_FILENAME_BASE}",
			"{",
				"\tpublic function ${2:index}()",
				"\t{",
					"\t\t$0",
					"\t\treturn view();",
				"\t}",
			"}\n"
		],
		"description": "生成控制器类"
	},
	"make model class": {
		"prefix": "model",
		"body": [
			"namespace app\\\\${1:module_name}\\model;",
			"use think\\Model;",
			"class ${TM_FILENAME_BASE} extends Model",
			"{",
				"\tprotected \\$table = '${2:table_name}';",
				"\tprotected \\$pk = '${3:id}';",
				"\t$0",
			"}\n"
		],
		"description": "生成模型类"
	},
	"make validate class": {
		"prefix": "validate",
		"body": [
			"namespace app\\validate;",
			"",
			"use think\\Validate;",
			"",
			"class Test extends Validate",
			"{",
				"\t/**",
				"\t * 定义验证规则",
				"\t * 格式：'字段名' => ['规则1','规则2'...]",
				"\t *",
				"\t * @var array",
				"\t */",
				"\tprotected \\$rule = [",
                "\t\t$0",
                "\t];",
				"\t",
				"\t/**",
				"\t * 定义错误信息",
				"\t * 格式：'字段名.规则名' => '错误信息'",
				"\t *",
				"\t * @var array",
				"\t */",
				"\tprotected \\$message = [",
                "\t\t$1",
                "\t];",
				"\t",
				"\t/**",
				"\t * 验证场景",
				"\t * 格式：'场景名称' => ['校验字段']",
				"\t *",
				"\t * @var array",
				"\t */",
				"\tprotected \\$scene = [];",
			"}\n"
		],
		"description": "生成验证器类"
	},
	"make command class": {
		"prefix": "command",
		"body": [
			"namespace app\\\\${1:module_name}\\command;",
			"",
			"use think\\console\\Command;",
			"use think\\console\\Input;",
			"use think\\console\\Output;",
			"use think\\console\\Input\\Argument;",
			"use think\\console\\Input\\Option;",
			"",
			"class ${TM_FILENAME_BASE} extends Command",
			"{",
				"\tprotected function configure()",
				"\t{",
					"\t\t// 指令配置",
					"\t\t\\$this->setName('${TM_FILENAME_BASE}');",
					"\t\t// 设置参数",
					"\t\t\\$this->addArgument('${2:arg_name}', Argument::OPTIONAL, '${3:传参说明}');",
					"\t\t\\$this->addOption('${4:long_arg_name}', '${5:short_arg_name}', Option::VALUE_OPTIONAL, '${6:传参说明}');",
					"\t\t\\$this->setDescription('命令描述信息');",

				"\t}",
			"",
				"\tprotected function execute(Input \\$input, Output \\$output)",
				"\t{",
					"\t\t// 指令输出",
					"\t\t\\$output->writeln('${TM_FILENAME_BASE}');",
					"\t\t// 获取参数",
					"\t\t\\$${2:arg_name} = \\$input->getArgument('${2:arg_name}');",
					"\t\t\\$${4:long_arg_name} = \\$input->getOption('${4:long_arg_name}');",

					"\t\t$0",

				"\t}",
			"}\n"
		],
		"description": "生成命令行类"
	},
	"make middleware": {
		"prefix": "middleware",
		"body": [
			"namespace app\\\\${1:module_name}\\middleware;",
			"",
			"class ${TM_FILENAME_BASE}",
			"{",
				"\tpublic function handle(\\$request, \\Closure \\$next)",
				"\t{",
					"\t\t$0",
                    "\t\t//前置中间件",
                    "\t\treturn \\$next(\\$request);",
                    "\t\t//后置中间件",
                    "\t\t//\\$resp = \\$next(\\$request);",
                    "\t\t//do something",
                    "\t\t//return \\$resp;",

				"\t}",
			"}\n"
		],
		"description": "生成中间件类"
	},
	"make event": {
		"prefix": "event",
		"body": [
			"namespace app\\\\${1:module_name}\\event;",
			"",
			"class ${TM_FILENAME_BASE}",
			"{",
				"\t$0",
			"}\n"
		],
		"description": "生成事件类"
	},
	"make service": {
		"prefix": "service",
		"body": [
			"namespace app\\\\${1:module_name}\\service;",
			"",
			"use think\\Service;",
			"",
			"class ${TM_FILENAME_BASE} extends Service",
			"{",
				"",
				"\tpublic function register()",
				"\t{",
					"\t\t$0",
				"\t}",
				"",
				"\tpublic function boot()",
				"\t{",
					"\t\t",
				"\t}",
			"}\n"
		],
		"description": "生成服务类"
	},
	"make listener": {
		"prefix": "listener",
		"body": [
			"namespace app\\\\${1:module_name}\\listener;",
			"",
			"class ${TM_FILENAME_BASE}",
			"{",
				"",
				"\tpublic function handle(\\$event)",
				"\t{",
					"\t\t$0",
				"\t}",
			"}\n"
		],
		"description": "生成监听类"
	},
	"make subscribe": {
		"prefix": "subscribe",
		"body": [
			"namespace app\\\\${1:module_name}\\subscribe;",
			"",
			"class ${TM_FILENAME_BASE}",
			"{",
				"\t$0",
			"}\n"
		],
		"description": "生成订阅类"
	}
}
